
# to create any resource we use below syntax

resource "resource type" "resource name"{

}

#default variable syntax

variable "var-name"{
    type = #data-type
    default = "default value"
}

#To pass variables in user prompt we will use variable syntax in below format.

variable "var-name"{
    # here the varaible ask its value via user prompt.
}

# to pass the variable value in cmd line we will use below format

terrafrom apply -var "variable name = value" -auto-approve  # here the varaible value  we are passing in cmd line.

# condition syntax in terrafrom

expression ? "this runs if true" : "this runs if false"

Loops:-

In terrafrom Loops are 3 types. they are :-

    1. count based Loops ---> Iterate over list type of variables.
    2. for each Loops  ---> use it to iterate maps
    3. dynamic blocks  ---> use it ito create multiple blocks inside a resource.

count based loops:-
    * we will use count based loops to create multiple same type of resources in terraform.




Dynamic blocks:-
    * Dynamic blocks are used to create multiple blocks inside a resource.


FOR-EACH LOOP :-

* In for each loop terraform will give a variable called "each" variable.












INTERPOLAATION :- 

    You can concate variables with text. 
Interpolation syntax 
    "${}"

LOCALS :-

Locals are used to run the expressions or functions and save the results to variables.
* Locals can't over-riden.
* Locals can store expressions.
* Locals can refer other local variables. 
* Locals dont have each acess. Each acess will be used with in that block only.


PROVISIONERS :- 

* PROVISIONERS are used to take some action either locally or remote when terraform created servers. 

* They are 2 types of provisioners .They are :- 
        1. Local-exec
        2. Remote- exec

Local-exec:-
* when terraform cmd is running that is local

remote-exec:-
* inside the server created by terraform



fo-each loop ----> each.key or each.value
provisioners ----> self

FUNCTIONS :-
1.
